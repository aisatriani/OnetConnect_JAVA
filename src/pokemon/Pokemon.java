/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pokemon;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.*;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THINH_DAT_DUC
 */
public class Pokemon extends javax.swing.JFrame implements java.awt.event.ActionListener{

    /**
     * Creates new form Pikachu
     */
    public Pokemon() {
        initComponents();
        afterInit();
        
        backgroundMusic = new Audio(backgroundMusicPath);
        backgroundMusic.start();
    }

    private Icon getIcon(){
        
        Random rd = new Random();
        do{
            index = rd.nextInt(25);
            appear[index]++;
        }while(appear[index]>4);
        
        //System.out.println(index+1);
        Image image = new ImageIcon(getClass().getResource("/icons/icon (" + (index+1) + ").jpg")).getImage();
	Icon icon = new ImageIcon(image.getScaledInstance(45, 45, image.SCALE_SMOOTH));
        return icon;
    }
    
    private void afterInit(){
        
        appear = new int[30];
        value = new int[12][12];
        p1 = null;
        p2 = null;
        algorithm = new Algorithm(value);
        saveScore = new SaveScore();

        createButtons();    // Khởi tạo các pokemon
        showScore();        // Hiển thị điểm lên bảng điểm

        countTime = new CountTime();
        countTime.start();
    }
    
    private void createButtons(){
        btn = new JButton[12][12];
        for(int i=1; i<=10; i++)
            for(int j=1; j<=10; j++){
                btn[i][j] = new JButton();
                btn[i][j].setActionCommand(i + "," + j);
                btn[i][j].setPreferredSize(new Dimension(50, 50));
                Icon icon = getIcon();                              // Lấy hình ngẫu nhiên
                value[i][j] = index+1;
                btn[i][j].setIcon(icon);
                btn[i][j].addActionListener(this);
            }
        
        pnlGame.removeAll();
        pnlGame.setPreferredSize(new Dimension(500, 500));
        pnlGame.setLayout(new GridLayout(10, 10));
        for(int i=1; i<=10; i++)
            for(int j=1; j<=10; j++)
                pnlGame.add(btn[i][j]);                             // Thêm các hình vào panel trò chơi
        pnlGame.validate();
        
        showValueMatrix();
    }
    
    private void showValueMatrix(){
        System.out.println("\n\n");
        for(int i=1; i<=10; i++){
            for(int j=1; j<=10; j++){
                if(value[i][j] < 10)
                    System.out.print("0" + value[i][j] + " ");
                else
                    System.out.print(value[i][j] + " ");
            }
            System.out.println();
        }
    }
    
    private void showScore(){
        String[] tiles = {"Tên", "Điểm"};
        Object[][] datas = null;
        if(saveScore.getPlayerList() != null){
            datas = saveScore.getPlayerList();
        }
        tblScores.setModel(new DefaultTableModel(datas, tiles));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlGame = new javax.swing.JPanel();
        pnlInformation = new javax.swing.JPanel();
        btnNewGame = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lblScore = new javax.swing.JLabel();
        pnlTime = new javax.swing.JPanel();
        timeProgressBar = new javax.swing.JProgressBar();
        pnlHint = new javax.swing.JPanel();
        btnHint = new javax.swing.JButton();
        lblAuthor = new javax.swing.JLabel();
        pnlHighScore = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        tblScores = new javax.swing.JTable();
        btnHelp = new javax.swing.JButton();
        btnSound = new javax.swing.JButton();
        btnPause = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("POKEMON");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 2));
        pnlTitle.setForeground(new java.awt.Color(204, 102, 255));
        pnlTitle.setToolTipText("");
        pnlTitle.setFont(new java.awt.Font("Tw Cen MT Condensed", 3, 36)); // NOI18N

        lblTitle.setFont(new java.awt.Font("Trebuchet MS", 3, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 102, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("POKEMON");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addContainerGap())
        );

        pnlGame.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pnlGameLayout = new javax.swing.GroupLayout(pnlGame);
        pnlGame.setLayout(pnlGameLayout);
        pnlGameLayout.setHorizontalGroup(
            pnlGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );
        pnlGameLayout.setVerticalGroup(
            pnlGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );

        pnlInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.blue, 2), "THÔNG TIN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14), java.awt.Color.cyan)); // NOI18N

        btnNewGame.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnNewGame.setText("CHƠI MỚI");
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGameActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnReset.setText("XÓA BẢNG ĐIỂM");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnExit.setText("THOÁT TRÒ CHƠI");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        lblScore.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScore.setText("0");
        lblScore.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red), "ĐIỂM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), java.awt.Color.red)); // NOI18N

        pnlTime.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)), "THỜI GIAN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 12), java.awt.Color.blue)); // NOI18N

        javax.swing.GroupLayout pnlTimeLayout = new javax.swing.GroupLayout(pnlTime);
        pnlTime.setLayout(pnlTimeLayout);
        pnlTimeLayout.setHorizontalGroup(
            pnlTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timeProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlTimeLayout.setVerticalGroup(
            pnlTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timeProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pnlHint.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)), "GỢI Ý", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 204, 0))); // NOI18N

        btnHint.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHint.setForeground(new java.awt.Color(0, 153, 102));
        btnHint.setText("5");
        btnHint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHintLayout = new javax.swing.GroupLayout(pnlHint);
        pnlHint.setLayout(pnlHintLayout);
        pnlHintLayout.setHorizontalGroup(
            pnlHintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnHint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlHintLayout.setVerticalGroup(
            pnlHintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnHint, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNewGame)
                            .addComponent(btnReset)
                            .addComponent(btnExit))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlHint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addComponent(lblScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNewGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblAuthor.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblAuthor.setForeground(new java.awt.Color(0, 0, 255));
        lblAuthor.setText("Huỳnh Tấn Thịnh ☺ Nguyễn Duy Đạt ☺ Cao Viết Đức");

        pnlHighScore.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 2), "BẢNG ĐIỂM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), java.awt.Color.orange)); // NOI18N

        tblScores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tên", "Điểm"
            }
        ));
        scrollPane.setViewportView(tblScores);

        javax.swing.GroupLayout pnlHighScoreLayout = new javax.swing.GroupLayout(pnlHighScore);
        pnlHighScore.setLayout(pnlHighScoreLayout);
        pnlHighScoreLayout.setHorizontalGroup(
            pnlHighScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        pnlHighScoreLayout.setVerticalGroup(
            pnlHighScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon-help.png"))); // NOI18N
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnSound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon-notmute.png"))); // NOI18N
        btnSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSoundActionPerformed(evt);
            }
        });

        btnPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon-pause.png"))); // NOI18N
        btnPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSound, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPause, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAuthor))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlHighScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(30, Short.MAX_VALUE))
            .addComponent(pnlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlHighScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSound, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnPause, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pnlTitle.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewGameActionPerformed
        stopTime();
        Object[] options = {"Có", "Không"};
        int isNewGame = JOptionPane.showOptionDialog(null, "Bạn có muốn chơi ván mới?", "Chơi mới?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
        if(isNewGame == JOptionPane.YES_OPTION){
            saveScore();
            lblScore.setText(String.valueOf(score = 0));
            newGame();
        }else{
            resumeTime();
        }
    }//GEN-LAST:event_btnNewGameActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        Object[] options = {"Có", "Không"};
        int isClear = JOptionPane.showOptionDialog(null, "Bạn có muốn xóa bảng điểm?", "Xóa bảng điểm?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
        if(isClear == JOptionPane.YES_OPTION){
            saveScore.clearScores();
            showScore();
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        saveScore();
        exitGame();
    }//GEN-LAST:event_btnExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        saveScore();
        exitGame();
    }//GEN-LAST:event_formWindowClosing

    private void btnHintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHintActionPerformed
        if(hint>0){
            findPokemon();
            btnHint.setText(String.valueOf(--hint));
        }else{
            Object[] option = {"Tôi biết rồi!"};
            JOptionPane.showOptionDialog(null, "Bạn đã hết lượt gợi ý!!", "Hết lượt!", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE, null, option, null);
            
        }
    }//GEN-LAST:event_btnHintActionPerformed

    private void btnSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSoundActionPerformed
        muted = !muted;
        if(muted){
            backgroundMusic.mute();
            btnSound.setIcon(new ImageIcon(getClass().getResource("/icons/icon-mute.png")));
            validate();
        }else{
            backgroundMusic = new Audio(backgroundMusicPath);
            btnSound.setIcon(new ImageIcon(getClass().getResource("/icons/icon-notmute.png")));
            validate();
        }
        
    }//GEN-LAST:event_btnSoundActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        setVisible(false);
        tutorial();
        setVisible(true);
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseActionPerformed
        setVisible(false);
        stopTime();
        String[] option = {"Tiếp tục!"};
        JOptionPane.showOptionDialog(null, "Trò chơi đang tạm dừng!", "Tạm dừng", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE, null, option, null);
        resumeTime();
        setVisible(true);
    }//GEN-LAST:event_btnPauseActionPerformed

    private void findPokemon(){
        int[] arrPosition;   // Mảng lưu vị trí
        
        arrPosition = algorithm.findPair();
        if(arrPosition[0] != -1){   // Tìm thấy
            btn[arrPosition[0]][arrPosition[1]].setBorder(BorderFactory.createLineBorder(Color.GREEN, 3));
            btn[arrPosition[2]][arrPosition[3]].setBorder(BorderFactory.createLineBorder(Color.GREEN, 3));
        }
        
    }
    
    private void stopTime(){
        countTime.stopTime();
    }
    
    private void resumeTime(){
        int timeResume = countTime.getTime();
        countTime = new CountTime(timeResume);
        countTime.start();
    }
    
    private void saveScore(){
        JPanel pnlOptionPane = new JPanel();
        pnlOptionPane.setLayout(new FlowLayout());
        JLabel lblName = new JLabel("Tên: ");
        JTextField txtName = new JTextField();
        txtName.setPreferredSize(new Dimension(120, 28));
        pnlOptionPane.add(lblName);
        pnlOptionPane.add(txtName);
        
        Object[] options = {"Lưu", "Không"};
        while(true){
            int isSaved = JOptionPane.showOptionDialog(null, pnlOptionPane, "Bạn có muốn lưu điểm?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
            if(isSaved == JOptionPane.YES_OPTION){
                if(txtName.getText().equals("")){
                    Object[] option = {"Đồng ý"};
                    JOptionPane.showOptionDialog(null, "Bạn chưa nhập tên!", "Lỗi!", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE, null, option, null);
                }else{
                    saveScore = new SaveScore(txtName.getText(), score);
                    showScore();
                    break;
                }
            }else{
                break;
            }
        }
    }
    
    private void newGame(){
        btnHint.setText(String.valueOf(hint = 5));
        stopTime();
        afterInit();
    }
    
    private void exitGame(){
        stopTime();
        Object[] options = {"Có", "Không"};
        int isExit = JOptionPane.showOptionDialog(null, "Bạn có muốn thoát trò chơi?", "Thoát?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
        if(isExit == JOptionPane.YES_OPTION){
            Object[] option = {"Tạm biệt!"};
            JOptionPane.showOptionDialog(null, "Cám ơn bạn đã chơi!", "Cám ơn!", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE, null, option, null);
            System.exit(0);
        }
        resumeTime();
    }
    
    private void tutorial(){
        stopTime();
        
        Object[] option = {"Tiếp tục"};
        Object[] options1 = {"Quay lại", "Tiếp tục"};
        Object[] options2 = {"Quay lại", "Chúc bạn may mắn!"};
        
        String[] sentence = {"<html>Cách chơi của trò chơi POKEMON khá đơn giản,"
                                + "<br/>bạn chỉ việc chọn 2 hình pokemon giống nhau"
                                + "<br/>sao cho nối không quá 3 đường gấp khúc"
                                + "<br/>và các đường nối không gặp vật cản"
                                + "<br/>là bạn đã có thể ăn 2 hình pokemon đó!"
                                + "<br/>Sau đây là một số ví dụ cụ thể!"
                                + "<br/><br/>Hình bên phải là nối 2 hình giống nhau bằng 1 đường nối !</html>",
                            "<html>Hình bên phải là nối 2 hình giống nhau<br/>bằng 1 đường nối hoặc 2 đường gấp khúc !</html>",
                            "<html>Hình bên phải là nối 2 hình giống nhau<br/>bằng 3 đường gấp khúc !</html>",
                            "<html>Hình bên phải là nối 2 hình giống nhau<br/>bằng 3 đường gấp khúc khác!</html>",
                            "<html>Nếu bạn chưa tìm ra được cặp giống nhau nào phù hợp!"
                                + "<br/>Bạn có thể sử dụng nút gợi ý như hình bên phải!</html>",
                            "<html>Sau khi nhấn nút gợi ý, 2 hình sẽ được gợi ý"
                                + "<br/>bằng cách khoanh vùng bằng màu xanh lá như sau!</html>",
                            "<html>Đồng thời số lượt gợi ý sẽ bị giảm xuống!"
                                + "<br/><br/>Hãy cố gắng đạt được số điểm cao nhất nhé!</html>"};
        String[] fileName = {"LineX-LineY.jpg", "LineX-Rect.jpg", "RectY.jpg", "MoreLeft.jpg", "ButtonHint.jpg", "Hint.jpg", "ButtonHintAfter.jpg"};
        
        int i=0;
        JPanel pnlTutorial;
        ImageIcon icon;
        JLabel lblSentence;
        JLabel lblImage;
        int isNotContinue;
        
        while(true){
            pnlTutorial = new JPanel();
        
            lblSentence = new JLabel(sentence[i]);
            icon = new ImageIcon(getClass().getResource("/imagetutorial/" + fileName[i]));
            lblImage = new JLabel(icon);
            pnlTutorial.add(lblSentence);
            pnlTutorial.add(lblImage);
            
            if(i == 0){
                isNotContinue = JOptionPane.showOptionDialog(null, pnlTutorial, "Hướng dẫn!", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, null, option, null);
                if(isNotContinue == JOptionPane.OK_OPTION){
                    i++;
                }else{
                    break;
                }
            }else if(i == 6){
                isNotContinue = JOptionPane.showOptionDialog(null, pnlTutorial, "Hướng dẫn!", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options2, null);
                if(isNotContinue == JOptionPane.YES_OPTION){
                    i--;
                }else{
                    break;
                }
            }else{
                isNotContinue = JOptionPane.showOptionDialog(null, pnlTutorial, "Hướng dẫn!", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options1, null);
                if(isNotContinue == JOptionPane.YES_OPTION){
                    i--;
                }else if(isNotContinue == JOptionPane.NO_OPTION){
                    i++;
                }else{
                    break;
                }
            }
        }
        
        resumeTime();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pokemon().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnHint;
    private javax.swing.JButton btnNewGame;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSound;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblScore;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlGame;
    private javax.swing.JPanel pnlHighScore;
    private javax.swing.JPanel pnlHint;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlTime;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblScores;
    private javax.swing.JProgressBar timeProgressBar;
    // End of variables declaration//GEN-END:variables
    private JButton[][] btn;
    private Point p1, p2;
    private int index = -1;
    private int[] appear;
    private int[][] value;
    private Algorithm algorithm;
    private CountTime countTime;
    private int maxTime = 600;
    private long score = 0;
    private int hint = 5;
    //private String backgroundMusicPath = "C:\\Users\\MON MINA\\Documents\\NetBeansProjects\\BTL_Java\\src\\audios\\background.mp3";
    private String backgroundMusicPath = "/audios/background.mp3";
    private Audio backgroundMusic;
    private boolean muted;
    private SaveScore saveScore;
    
    
    @Override
    public void actionPerformed(ActionEvent e) {
        String btnIndex = e.getActionCommand();
	int indexDot = btnIndex.lastIndexOf(",");
        int x = Integer.parseInt(btnIndex.substring(0, indexDot));
	int y = Integer.parseInt(btnIndex.substring(indexDot + 1, btnIndex.length()));
        if(p1 == null){
            p1 = new Point(x, y);
            btn[p1.x][p1.y].setBorder(new javax.swing.border.LineBorder(Color.magenta, 3));
        }else{
            p2 = new Point(x, y);
            System.out.println("Kiểm tra: [" + p1.x + "][" + p1.y + "] - ["+ p2.x + "][" + p2.y + "]");
            switch (algorithm.checkTwoPoint(p1, p2)){
                case 1:
                    System.out.println("Hàng ngang");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                case 2:
                    System.out.println("Hàng dọc");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                case 3:
                    System.out.println("Hình chữ nhật ngang");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                case 4:
                    System.out.println("Hình chữ nhật dọc");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                case 5:
                    System.out.println("Mở rộng phải");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                case 6:
                    System.out.println("Mở rộng trái");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                case 7:
                    System.out.println("Mở rộng dưới");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                case 8:
                    System.out.println("Mở rộng trên");
                    deleteButton(p1, p2);
                    System.out.println("Đã Xóa");
                    break;
                default:
                    System.out.println("Không thỏa mãn!");
                    break;
            }
            
            showValueMatrix();
            
            try{
                btn[p1.x][p1.y].setBorder(null);
                btn[p2.x][p2.y].setBorder(null);
                p1 = null;
                p2 = null;
            }catch(NullPointerException npe){
                System.out.println("Hết nút");
            }
        }
        
    }

    private void disableButton(JButton btn){
        btn.setIcon(null);
        btn.setBackground(getBackground());
	btn.setEnabled(false);
    };
    
    private void deleteButton(Point p1, Point p2) {
        value[p1.x][p1.y] = 0;
        value[p2.x][p2.y] = 0;
        disableButton(btn[p1.x][p1.y]);
        disableButton(btn[p2.x][p2.y]);
        lblScore.setText(String.valueOf(score+=2));
        
        if(isNoWay()){
            Object[] option = {"Đồng ý!"};
            JOptionPane.showOptionDialog(null, "Hết đường đi!!! Bạn sẽ được sang ván mới!!!", "Hết đường!", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE, null, option, null);
            nextLevel();
        }
        
    }
    
    private void nextLevel(){
        newGame();
        stopTime();
        maxTime = maxTime*80/100;
        countTime = new CountTime(maxTime);
        countTime.start();
    }
    
    private boolean isNoWay(){
        int[] arrPosition;   // Mảng lưu vị trí
        arrPosition = algorithm.findPair();
        if(arrPosition[0] == -1)
            return true;
        
        return false;
    }
    
    class CountTime extends Thread{
        
        private int time;
        private boolean running = true;
        
        
        public CountTime(){
            time = maxTime;
        }
        
        public CountTime(int time){
            this.time = time;
        }
        
        public void run(){
            while(running){
                try{
                    Thread.sleep(1000);
                }catch(InterruptedException e){
                    e.printStackTrace();
                }
                timeProgressBar.setValue((int) ((double) (time--) / maxTime * 100));
                pnlTime.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.blue), "THỜI GIAN: " + time, TitledBorder.CENTER, TitledBorder.ABOVE_TOP, new Font("Tahoma", Font.BOLD, 12), Color.blue));
                if(time == 0){
                    countTime.stopTime();
                    
                    Object[] options = {"Có", "Không"};
                    int isNewGame = JOptionPane.showOptionDialog(null, "Hết giờ!!\nBạn có muốn chơi lại?", "Chơi lại?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
                    if(isNewGame == JOptionPane.YES_OPTION){
                        saveScore();
                        newGame();
                    }
                    else{
                        saveScore();
                        Object[] option = {"Tạm biệt!"};
                        JOptionPane.showOptionDialog(null, "Cám ơn bạn đã chơi!", "Cám ơn!", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE, null, option, null);
                        System.exit(0);
                    }
                }
            }
        }
        
        public int getTime(){
            return time;
        }
        
        public void stopTime(){
            running = false;
        }
        
        
    }    
}
